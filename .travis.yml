# https://docs.haskellstack.org/en/stable/travis_ci/
# Use new container infrastructure to enable caching
sudo: true
dist: trusty
services:
  - docker

# Do not choose a language; we provide our own build tools.
language: generic

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack

addons:
  apt:
    packages: &apt_packages
      - ghc-ppa-tools
      - freeglut3-dev
      - alex-3.1.7
      - happy-1.19.5

matrix:
  include:
  - env: BUILD=cabal GHCVER=8.0.2
    compiler: ": #GHC 8.0.2"
    addons: {apt: {packages: [*apt_packages,cabal-install-2.0,ghc-8.0.2], sources: [hvr-ghc]}}
  - env: BUILD=cabal GHCVER=8.2.2
    compiler: ": #GHC 8.2.2"
    addons: {apt: {packages: [*apt_packages,cabal-install-2.0,ghc-8.2.2], sources: [hvr-ghc]}}

  # Build with the newest GHC and cabal-install. This is an accepted failure,
  # see below.
  - env: BUILD=cabal GHCVER=head
    compiler: ": #GHC HEAD"
    addons: {apt: {packages: [*apt_packages,cabal-install-head,ghc-head], sources: [hvr-ghc]}}

  # Nightly builds are allowed to fail
  # - env: BUILD=stack ARGS="--resolver nightly"
  #   compiler: ": #stack nightly"
  #   addons: {apt: {packages: [libgmp-dev]}}

  # Build on macOS in addition to Linux
  - env: BUILD=stack ARGS=""
    compiler: ": #stack default osx"
    os: osx

  - env: BUILD=stack ARGS="--resolver lts-7"
    compiler: ": #stack 8.0.2 osx"
    os: osx

  - env: BUILD=stack ARGS="--resolver lts-9"
    compiler: ": #stack 8.2.2 osx"
    os: osx

  - env: BUILD=stack ARGS="--resolver lts-11"
    compiler: ": #stack 8.2.2 osx"
    os: osx

  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly osx"
    os: osx

  allow_failures:
  - env: BUILD=cabal GHCVER=head
  # - env: BUILD=stack ARGS="--resolver nightly"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

- export HAPPYVER=1.19.5
- export ALEXVER=3.1.7

- export LD_LIBRARY_PATH=/usr/local/lib

# - docker-compose --version

# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

# Download and unpack the stack executable
- export PATH=/opt/ghc/bin:/opt/ghc-ppa-tools/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config

install:
- ./scripts/build-librdkafka
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies --flag hw-kafka-client:examples
      ;;
    cabal)
      cabal --version
      travis_retry cabal update

      # Get the list of packages from the stack.yaml file
      PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
      cabal install c2hs
      ;;
  esac
  set +ex

before_script:
- |
  if [ $TRAVIS_OS_NAME == "linux" ]
  then
    export KAFKA_TEST_BROKER=$DOCKER_IP
    docker run -d --name zookeeper -p 2181:2181 -e ZOOKEEPER_CLIENT_PORT=2181 confluentinc/cp-zookeeper:3.1.2
    docker run -d --name kafka -p 9092:9092 -e KAFKA_ADVERTISED_LISTENERS="PLAINTEXT://$DOCKER_IP:9092" -e KAFKA_ZOOKEEPER_CONNECT="$DOCKER_IP:2181" -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 confluentinc/cp-kafka:3.1.2
    sleep 10
  fi

script:
- |
  set -ex
  case "$BUILD" in
    stack)
      if [ $TRAVIS_OS_NAME == "osx" ]
      then
        stack --no-terminal $ARGS build --flag hw-kafka-client:examples
      else
        stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps --flag hw-kafka-client:examples
      fi
      ;;
    cabal)
      cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES

      ORIGDIR=$(pwd)
      for dir in $PACKAGES
      do
        cd $dir
        cabal check
        cabal sdist
        PKGVER=$(cabal info . | awk '{print $2;exit}')
        SRC_TGZ=$PKGVER.tar.gz
        cd dist
        tar zxfv "$SRC_TGZ"
        cd "$PKGVER"
        cabal configure --enable-tests
        cabal build
        cd $ORIGDIR
      done
      ;;
  esac
  set +ex

# after_success:
# - docker-compose down
#
# after_failure:
# - docker-compose down
#
# after_script:
# - docker-compose down
